rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if a user is a participant of a conversation
    function isConversationParticipant(conversationId) {
      return request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
    }

    match /users/{userId} {
      // Allow users to read their own document
      // Allow anyone to read public profile info (displayName, photoURL, etc.)
      allow read: if true;
      // Allow users to create their own document and update it
      allow write: if request.auth.uid == userId;
    }

    match /products/{productId} {
      // Anyone can read products
      allow read: if true;
      // Only authenticated users can create products
      allow create: if request.auth.uid != null;
      // Only the seller can update their own product
      allow update: if request.auth.uid == resource.data.sellerId;
      // Only the seller can delete their own product
      allow delete: if request.auth.uid == resource.data.sellerId;
    }

    match /conversations/{conversationId} {
      // Separated rules for clarity and correctness
      
      // READ: Only participants can read the conversation document.
      allow read: if request.auth.uid in resource.data.participantIds;
      
      // CREATE: A user can create a conversation if their UID is in the new participant list.
      allow create: if request.auth.uid in request.resource.data.participantIds;
      
      // UPDATE: Only participants can update a conversation document.
      allow update: if request.auth.uid in resource.data.participantIds;

      // No one can delete a conversation directly. Deletion is handled by a Cloud Function.
      allow delete: if false;

      match /messages/{messageId} {
        // READ: Only participants of the parent conversation can read messages.
        allow read: if isConversationParticipant(conversationId);
        // CREATE: Only participants of the conversation can create messages.
        allow create: if isConversationParticipant(conversationId) && request.auth.uid == request.resource.data.senderId;
      }
    }
    
    match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read: if true;
        // Only authenticated users can create reviews
        allow create: if request.auth.uid == request.resource.data.reviewerId;
    }
    
    match /notifications/{notificationId} {
        // Only the recipient can read their notification
        allow read: if request.auth.uid == resource.data.userId;
        // Only the recipient can update their notification (e.g., mark as read)
        allow update: if request.auth.uid == resource.data.userId;
    }
  }
}
