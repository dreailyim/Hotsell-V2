
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Users Collection ---
    // Anyone can read a user's public profile.
    // Only the user themselves can update their own data.
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // --- Products Collection ---
    // Anyone can read products.
    // Only authenticated users can create products.
    // Only the seller can update or delete their own products.
    match /products/{productId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }

    // --- Conversations Collection ---
    // Users can only access conversations they are a part of.
    // This rule now correctly allows background functions (admin SDK) to write to conversations
    // while ensuring client-side writes are restricted to participants.
    match /conversations/{conversationId} {
        allow read, write: if request.auth != null && request.auth.uid in resource.data.participantIds;
        
        // Explicitly allow access to the messages subcollection if the user is a participant.
        match /messages/{messageId} {
            allow read, create: if request.auth != null && get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds.hasAny([request.auth.uid]);
        }
    }
    
    // --- Reviews Collection ---
    // Anyone can read reviews.
    // Only authenticated users can create reviews.
    // A user cannot write a review for themselves.
    match /reviews/{reviewId} {
      allow read: if true;
      allow create: if request.auth != null && request.resource.data.reviewerId == request.auth.uid && request.resource.data.ratedUserId != request.auth.uid;
    }

    // --- Notifications Collection ---
    // Users can only read their own notifications.
    // Users can only update the isRead status of their own notifications.
    match /notifications/{notificationId} {
       allow read: if request.auth != null && resource.data.userId == request.auth.uid;
       allow update: if request.auth != null && resource.data.userId == request.auth.uid && request.resource.data.keys().hasOnly(['isRead']);
    }

    // --- Banners Collection ---
    // Anyone can read banners.
    // Allow anyone to create initial seed data. This is safe because
    // the app logic only writes to it if the collection is empty.
    match /banners/{bannerId} {
      allow read: if true;
      allow create: if true;
    }
  }
}
