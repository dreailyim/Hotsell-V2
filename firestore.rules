rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone can read a user's public profile
      allow read;
      // Only the authenticated user can update their own profile
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'products' collection
    match /products/{productId} {
      // Anyone can read (list and get) products
      allow read;
      // Only the authenticated seller of the product can create, update or delete it
      allow write: if isSignedIn() && request.auth.uid == request.resource.data.sellerId || request.auth.uid == resource.data.sellerId;
    }

    // Rules for the 'conversations' collection and its subcollections
    match /conversations/{conversationId} {
      // A user can list conversations they are a part of.
      // This rule works because the client query MUST include `where('participantIds', 'array-contains', request.auth.uid)`
      allow list: if isSignedIn();

      // A user can read or update a conversation document if they are a participant.
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.participantIds;

      // Any signed-in user can create a conversation, but they must be one of the participants.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;

      // Rules for the 'messages' subcollection
      match /messages/{messageId} {
        // A user can read messages in a conversation if they are a participant.
        allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // A user can create a message in a conversation if they are a participant.
        allow create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }
    
    // Rules for the 'reviews' collection
    match /reviews/{reviewId} {
        // Anyone can read reviews
        allow read;
        // Only signed in users can create reviews
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.reviewerId;
    }

    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
        // Users can only read/write their own notifications
        allow read, write: if isSignedIn() && request.auth.uid == resource.data.userId;
        allow list: if isSignedIn(); // Query will be filtered by userId on the client
    }
    
    // Rules for the 'banners' collection
    match /banners/{bannerId} {
        // Anyone can read banners
        allow read;
        // Writing banners is restricted (e.g., admin only, not defined here for simplicity)
        allow write: if false;
    }
  }
}
