
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // USERS
    // Users can read anyone's public profile.
    // Users can only create and update their own profile.
    match /users/{userId} {
      allow read;
      allow create, update: if isSignedIn() && request.auth.uid == userId;
    }

    // PRODUCTS
    // Anyone can read products.
    // Logged in users can create products.
    // Only the seller can update product details (except for favorites).
    // Any logged in user can update the favorites.
    // Only the seller can delete their own product.
    match /products/{productId} {
      allow read;
      allow create: if isSignedIn();
      allow update: if isSignedIn() && 
                      (request.auth.uid == resource.data.sellerId && onlySellerFieldsChanged()) ||
                      (onlyFavoritesChanged());
      allow delete: if isSignedIn() && request.auth.uid == resource.data.sellerId;

      function onlySellerFieldsChanged() {
        return !(request.resource.data.diff(resource.data).affectedKeys.hasAny(['favorites', 'favoritedBy']));
      }

      function onlyFavoritesChanged() {
        let changedKeys = request.resource.data.diff(resource.data).affectedKeys;
        return changedKeys.hasOnly(['favorites', 'favoritedBy']);
      }
    }

    // CONVERSATIONS
    // Participants can read, create, and update conversations.
    match /conversations/{conversationId} {
      allow read, update, create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
      
      // MESSAGES Subcollection
      // Participants can read and create messages.
      match /messages/{messageId} {
        allow read: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        allow create: if isSignedIn() && request.resource.data.senderId == request.auth.uid;
      }
    }
    
    // REVIEWS
    // Anyone can read reviews.
    // Logged in users can create reviews.
    match /reviews/{reviewId} {
        allow read;
        allow create: if isSignedIn() && request.auth.uid == request.resource.data.reviewerId;
    }
    
    // NOTIFICATIONS
    // Users can only access their own notifications.
    match /notifications/{notificationId} {
        allow read, update, list: if isSignedIn() && request.auth.uid == resource.data.userId;
    }
    
    // BANNERS
    // Anyone can read banners.
    match /banners/{bannerId} {
      allow read;
    }
  }
}
