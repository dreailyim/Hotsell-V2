rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // Users can read any user's public profile.
    // Users can only write to their own document.
    match /users/{userId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // Anyone can read and list products.
    // Only signed-in users can create products.
    // Only the seller can update or delete their own products.
    match /products/{productId} {
      allow read, list: if true;
      allow create: if isSignedIn();
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.sellerId;
    }
    
    // Banners can be read by anyone
    match /banners/{bannerId} {
        allow read, list: if true;
        allow create, update, delete: if isSignedIn(); // Or more specific admin logic
    }

    // Rules for conversations and their subcollections
    match /conversations/{conversationId} {
      // A user can read, update, or delete a conversation document IFF they are a participant.
      allow read, update, delete: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      
      // A user can create a conversation IFF they are one of the participants in the new document.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;

      // A user can LIST conversations IFF their UID is part of the 'participantIds' filter.
      // This is a crucial rule for querying conversations.
      allow list: if isSignedIn() && request.auth.uid in request.query.where.value;

      // Rules for messages within a conversation
      match /messages/{messageId} {
        // A user can read/list messages in a conversation IFF they are a participant of that conversation.
        // This uses get() to check the parent conversation document.
        allow read, list: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // A user can create a message IFF they are a participant of the parent conversation.
        allow create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }
    
    // Users can only read their own notifications.
    match /notifications/{notificationId} {
      allow read, list: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow update: if isSignedIn() && request.auth.uid == resource.data.userId;
      allow create: if isSignedIn(); // Allow server-side functions to create notifications
    }
    
    // Users can read reviews.
    // Users can only create reviews if they are signed in.
    match /reviews/{reviewId} {
      allow read, list: if true;
      allow create: if isSignedIn() && request.auth.uid == request.resource.data.reviewerId;
    }
  }
}
