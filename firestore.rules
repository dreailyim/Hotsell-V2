rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // --- Users Collection ---
    // Anyone can read a user's public profile.
    match /users/{userId} {
      allow read;
      // Only the user themselves can update their own profile.
      allow write: if isSignedIn() && request.auth.uid == userId;
    }

    // --- Products Collection ---
    // Anyone can read/list products.
    match /products/{productId} {
      allow read, list;
      // Only signed-in users can create products.
      allow create: if isSignedIn();
      // Only the seller can update or delete their own products.
      allow update, delete: if isSignedIn() && request.auth.uid == resource.data.sellerId;
    }

    // --- Banners Collection ---
    // All users can read banners
    match /banners/{bannerId} {
      allow read, list;
      // You might want to restrict write access in a real app
      allow write: if isSignedIn(); 
    }

    // --- Conversations and Messages ---
    match /conversations/{conversationId} {
      // Allow a user to read or update a conversation document if their UID is in the participantIds array.
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      
      // Allow a user to list conversations ONLY if their query explicitly filters for their own UID.
      // This is a critical rule to allow the "messages" page to load.
      allow list: if isSignedIn() && request.auth.uid == request.query.where.participantIds[2];
      
      // Allow a user to create a conversation if:
      // 1. They are signed in.
      // 2. Their own UID is in the participantIds of the new document.
      // 3. The participantIds array has exactly 2 members.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds && request.resource.data.participantIds.size() == 2;
      
      // Messages Subcollection
      match /messages/{messageId} {
        // Allow a user to read/list messages if they are a participant of the parent conversation.
        allow read, list: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        // Allow a user to create a message if they are a participant of the parent conversation.
        allow create: if isSignedIn() && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }

    // --- Reviews Collection ---
    match /reviews/{reviewId} {
      // Anyone can read reviews.
      allow read, list;
      // Only signed-in users can create a review, and they cannot review themselves.
      allow create: if isSignedIn() && request.resource.data.reviewerId == request.auth.uid && request.resource.data.reviewerId != request.resource.data.ratedUserId;
    }
    
    // --- Notifications Collection ---
    match /notifications/{notificationId} {
        // A user can read/list their own notifications
        allow read, list: if isSignedIn() && resource.data.userId == request.auth.uid;
        // A user can update their own notifications (e.g., mark as read)
        allow update: if isSignedIn() && resource.data.userId == request.auth.uid;
        // Creating notifications should likely be handled by backend functions for security
        allow create: if false;
    }
  }
}
