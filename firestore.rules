
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Users Collection ---
    // Anyone can create their own user document.
    // Users can only read/update their own document.
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null;
    }
    
    // --- Products Collection ---
    // Anyone can read products.
    // Users can only create products for themselves.
    // Users can only update/delete their own products.
    match /products/{productId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.sellerId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.sellerId;
    }
    
    // --- Banners Collection ---
    // Anyone can read the banners for ads.
    // Only authenticated users can create new banners.
    match /banners/{bannerId} {
      allow read: if true;
      allow create: if request.auth != null;
    }

    // --- Conversations & Messages ---
    // Participants can read/write messages in a conversation.
    // Participants can update conversation details (e.g., unread count, last message).
    match /conversations/{conversationId} {
      allow read, update: if request.auth != null && request.auth.uid in resource.data.participantIds;
      // Note: Creation is handled by a cloud function or secured client-side logic
      
      match /messages/{messageId} {
        allow read, create: if request.auth != null && request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
      }
    }
    
    // --- Reviews Collection ---
    // Anyone can read reviews.
    // Only authenticated users can create reviews.
    match /reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.reviewerId;
    }
    
    // --- Notifications Collection ---
    // Users can only read/update their own notifications.
    match /notifications/{notificationId} {
      allow read, update: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
